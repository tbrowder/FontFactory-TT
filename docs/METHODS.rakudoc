=begin pod

=head1 B<Digital Typesetting>

Modern typesetting involves using text and digital typefaces (fonts)
placed on a page mimicing the earlier printing era with hand-placed
lead type on a printing press, covered with a thin layer of ink, and
pressed against paper to produce a printed page. While retaining some
of the old terminology, modern typesetting results in more accurate
and easier production of beautiful printed products.

A few terms need to be explained to understand the application of
digital fonts using this module as well as B<Font::FreeType> which is
central to it.

Placing a single line of text using a font of a specific size
(expressed as a height of N points where there are 72 points per inch)
involves knowledge of both a single character's metrics as well as its
collective metrics when gathered as a multi-glyph string or block
of text.

A glyph is a digital character in the chosen font, and it has the
following metric characteristics described for our use in placing the
character:

=item Origin - Vertically centered on the baseline of the line of
text, it is the reference point to be used when placing the glyph on
the desired baseline.

=begin item 
Bounding box ('bbox' or 'BBox') 

1 - The rectangle that bounds the horizontal and vertical limits of 
the outline of a glyph. 
The bounding box is described as a list of four numbers, expressed as
PostScript points (72 per inch), representing the C<x> and C<y>
coordinates of the lower-left corner and the C<x> and C<y> coordinates
of the upper-right corner from the glyph's origin. 

2 - The same as the first definition but applied to a set of glyphs as a line of text.
=end item

=begin item 
Width 

1 - The horizontal distance from a glyph's origin to the
right to the point where the next glyph's origin is designed to be
placed. (Note the I<FreeType Project> calls it the 'horizontal-advance'.) 

2 - The same as the first definition but applied to a set of
glyphs as a line of text.
=end item

=item Font bounding box - The rectangle that bounds the smallest
outline which encompasses all the glyphs in the font when placed with
their origins at the same point.

=item Left bearing - The C<x> value of the left side of a glyph's bounding box.
=item Top bearing - The C<y> value of the top side of of a glyph's bounding box.
=item Bottom bearing - The C<y> value of the bottom side of a glyph's bounding box.
=item Right bearing - The C<x> value of the right side of a glyph's bounding box.
Note the I<FreeType Project> has a different definition: the distance from the
glyph's maximum C<x> value to its [advance] width.

=begin item
Scale factor - A font's metrics are typically described as being in a
rectangular coordinate system with a width of 1000 or more 'units'. To get the
equivalent of the dimensions in the chosen point size the values are
multiplied by a scale factor: point size / [number of 'units'].

For example, given a character, say 'B', in a font with a size of 12.3
points with its glyph's raw metrics width being 700 units in a 1000-unit square, 
find the glyph's final width in points:

=begin code
scale factor = 12.3/1000 = 0.0123
width = 0.0123 x 700 = 8.61
=end code

=end item

=head1 B<class DocFont methods>

The following methods are similar to those found in module
C<Font::AFM> but are constructed from data herein and have been
adjusted for the C<DocFont> object's font size.

Some methods have short aliases for convenience in coding.

The following table shows the Font::Factory attributes and methods versus 
their equivalents in Font::AFM.

=begin table :caption<For a font Face (a collection of glyphs)>
FontFactory             | Font::AFM | Notes
------------------------+-----------+------
Ascender                |           |
Descender               |           |
Height                  |           |
Width                   |           |
X-advance               |           |
BBox                    |           |
Top-bearing             |           |
Left-bearing            |           |
Bottom-bearing          |           |
Right-bearing           |           |
Underline-position      |           |
Underline-thickness     |           |
Strikethrough-position  |           |
Strikethrough-thickness |           |
=end table

=begin table :caption<For a glyph (individual character)>
FontFactory             | Font::AFM | Notes
------------------------+-----------+------
ascender                |           |
descender               |           |
height                  |           |
width                   |           |
x-advance               |           |
bbox                    |           |
top-bearing             |           |
left-bearing            |           |
bottom-bearing          |           |
right-bearing           |           |
=end table

=head3 B<Strikethrough-position>

Provides the position of the strikethrough line as the midheight of
the lower-case 'm'

=head3 B<Strikethrough-thickness>

Provides the suggested thickness of the strikethrough line for the font size

=head3 B<Left-bearing>

The left sidebearing is defined as the first character's BBox[0] distance from its origin.

=head3 B<Right-bearing>

Get the value of the rightmost outline in a character or string

=head3 B<Top-bearing>

Get the value of the topmost outline in a character or string

=head3 B<Bottom-bearing>

Get the value of the bottommost outline in a character or string

=head3 B<Line-height>

Get the maximum vertical space required for any single line of
text or, optionally, for a specific string

=head3 B<BBox>

Returns a list of the bounding box of the input string or the FontBBox
if a string is not provided.  The user may choose to to kern the
string.

=head3 B<stringwidth>

Provides the width of string for the font size. The kerned width is provided
if C<$kern> is C<True>.

=head3 B<Underline-position>

Provides the designed distance of the underline below the baseline for the font size

=head3 B<Underline-thickness>

Provides the designed thickness of the underline for the font size

=head3 B<Is-fixedPitch>

If true, the font is a fixed-pitch (monospaced) font, e.g., 'Courier'.

=head3 B<FontName>

The name of the font as presented to the PostScript language
C<findfont> operator, e.g., 'Times-Roman'.

=head3 B<FullName>

Unique, human-readable name for an individual font, e.g., 'Times Roman'.

=head3 B<FamilyName>

Human-readable name for a group of fonts that are stylistic variants of
a single design', e.g., 'Times'.

=head3 B<Weight>

Human-readable name for the weight or "boldness" attribute of a font.
Examples are 'Roman', 'Bold', and 'Light'.

=head3 B<ItalicAngle>

Angle in degrees counterclockwise from the vertical of the dominate 
vertical strokes of the font.

=head3 B<Version>

Version of the font.

=head3 B<Notice>

Trademark or copyright notice, if applicable.

=head3 B<Comment>

Comments found in the font file.

=head3 B<EncodingScheme>

The name of the standard encoding scheme for the font.
Most Adobe fonts use the 'AdobeStandardEncoding'.
Special fonts might state 'FontSpecific'.

=head3 B<CapHeight>

Usually the y-value of the top of the capital 'H'.

=head3 B<XHeight>

Typically the y-value of the top of the lowercase 'x'.

=head3 B<Ascender>

Typically the y-value of the top of the lowercase 'd'.

=head3 B<Descender>

Typically the y-value of the bottom of the lowercase 'p'.

=end pod
