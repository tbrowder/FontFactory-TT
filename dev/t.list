exercise-afm-methods.raku:# my $bbox = Font::Metrics::times-roman.FontBBox;
exercise-afm-methods.raku:# note "DEBUG: {$bbox.gist}";
gen-afm-tests.raku:# my $bbox = Font::Metrics::times-roman.FontBBox;
gen-afm-tests.raku:# note "DEBUG: {$bbox.gist}";
hash-array.raku:my $bbox := [
hash-array.raku:say Dump($bbox, :no-postfix, :skip-methods);
hash-array.raku:#my $b = %bbox>>.map({ $_ >>*>> 2 });
hash-array.raku:my $b = $bbox>>.map({ $_ >>*>> 2 });
iterate-text.raku:    say "        bbox (char BBoX): ", sprintf("%f %f %f %f", 
iterate-text.raku:say "bbox: ", $fm.bounding-box; # an array
iterate-text.raku:        my $bbox = $g.outline.bounding-box;
iterate-text.raku:        my $llx  = $bbox.x-min;
iterate-text.raku:        my $lly  = $bbox.y-min;
iterate-text.raku:        my $urx  = $bbox.x-max;
iterate-text.raku:        my $ury  = $bbox.y-max;
iterate-text.raku:    say "        bbox (char BBoX): ", sprintf("%f %f %f %f", $b.x-min, $b.y-min, $b.x-max, $b.y-max);
show-afm-methods.raku:# my $bbox = Font::Metrics::times-roman.FontBBox;
show-afm-methods.raku:# note "DEBUG: {$bbox.gist}";
test-str-bbox.raku:    and testing string bboxes using Times-Roman
test-str-bbox.raku:        my $bbox;
test-str-bbox.raku:            $bbox = string-bbox :$type, :$box, :kern;
test-str-bbox.raku:            $bbox = string-bbox :$type, :$box;
use-ttf-otf.raku:    say "bbox: ", $fm.bbox; # an array
use-ttf-otf.raku:            my $bbox = $_.is-outline ?? $_.outline.bbox !! False;
use-ttf-otf.raku:        my $b = $g.outline.bbox;
use-ttf-otf.raku:        say "        bbox (char BBoX): ", sprintf("%f %f %f %f", $b.x-min, $b.y-min, $b.x-max, $b.y-max);
