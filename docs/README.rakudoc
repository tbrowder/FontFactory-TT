=begin pod

=head1 NAME

B<FontFactory> - Provides tools for managing Unicode I<TrueType>
and I<OpenType> fonts and obtaining their typesetting metrics.

=head1 SYNOPSIS

=begin code :lang<raku>
use FontFactory;
my $ff = FontFactory.new;
$ff.showfonts;
...show first few fonts
# get a new DocFont object
my $font = $ff.get-font: 2, 10.2; # font at index 2, set size at 10.2 points
say $font.name;        # OUTPUT: « ␤»
say $font.has-kerning; # OUTPUT: « ␤»
say $font.FontBBox;    # OUTPUT: « ␤»
say $font.path;        # OUTPUT: « ␤»
my $text = "Now is the time to act.";

# get a new String object
my $s = String.new: $text, :$font, :!kern; # :$kern default is True
say $s.width;
say $s.bbox;
# print the text at the top of a PDF::Lite page
...
# update the text
$s.text = "Act alone or with a trusted friend.";
# print the text on the next line of the page
...



=end code

=head1 Installation

=head3 Preparation

Before installing this module, you should add any additional desired
fonts such as those available as packages for your system (for example,
the DejaVu fonts are available in Debian package C<fonts-dejavu>).
No fonts are available with this module when it is installed, but
its Github repository includes one in the C</t/fonts> directory.

To get a look at how your fonts appear when printed, install the
program C<fntsample> (Debian package name is the same) and use it with
a desired font file name to get a detailed sample on an output PDF
file. See L<https://fntsample.sourceforge.net> for details.

=head3 Install with C<zef>

When you are satisfied with your font collection, proceed with C<zef
install FontFactory>.

=head2 Font licenses

Fonts installed on most systems are usually free for personal use, but
may have restrictions for other uses. Please ensure you adhere to
those requirements.

=head2 Font lists

=head3 System fonts

To use this module, you must first generate a list of all the
TrueType and OpenType fonts available on your system.  That
is automatically accomplished during the installation by C<zef> in its
build step.  The only directories searched are the following:

=item /usr/share/fonts
=item /usr/share/X11/fonts/TTF
=item /usr/local/share/fonts

The list will be stored in your C<$HOME> directory as
C<$HOME/.fontfactory/system-fonts.list>.  That file looks something
like this:

=begin code
# font-index font-name location has-kerning?
2 Blarney.ttf /usr/src/fonts/ HAS-KERNING
  #... more entries
243 Courier.otf /usr/local/fonts/
  #... more entries
=end code

Note that there may be multiple instances of the same font on your
system, but only one will be listed. This module uses that file, but
you can regenerate it at any time by running C<ff-gen-list>. You may
delete any font entries in the lists, but do not change the format of the first
three fields of remaining data lines. Comments starting with a C<#> are
allowed, and the text is ignored from there to the end of the line.

=head3 User fonts

For convenience, you may want to use another list to associate
your oft-used fonts with a short alias. That is done by creating a
file named C<$HOME/.fontfactory/my-fonts.list>. (An empty list is
created during installation if it doesn't already exist.)

The file should look something like this:

=begin code
# A valid data line contains three fields (words separated by one 
# or more spaces):
#   1. alias
#   2. font-name (with extension)
#   3. location (parent directory)
# All data on a line after the third field are ignored with one 
# exception: any 'KERN' or 'kern' found will flag the font as having a 
# kerning capability.
# Blank or comment lines like this are ignored.
  100   Blarney.ttf   ~/.fonts    kerning my favorite serif font
  c     Courier.otf   /some/dir   my favorite monospaced font
  p     Pocus.ttf     /some/dir   my favorite sans serif font
  s     Scroll.otf    /some/dir   best for Jewish calendars
=end code

Note the fields B<alias>, B<font-name>, and B<location> (parent directory) are required.
The B<alias> is some key you want to use to refer to that font. (This directory
will be searched before the system fonts list and its alias will override any
identical system font alias.)
The B<font-name> B<must> include the suffix ('.otf' or '.ttf').
The B<notes> field is optional.

=head3 User font metrics data

As the FontFactory is used, calculated values for font metrics are
saved in files in the user's home directory under
C<$HOME/.fontfactory/font-metrics/>. 
The format is subject to change and the files should not be 
changed by the user, but you may safely delete them
when the FontFactory is inactive.

=head1 DESCRIPTION

B<FontFactory> is a Unicode font factory similar to C<FontFactory::Type1>, but
using I<TrueType> and I<OpenType> fonts.
It provides functions to ease using Unicode fonts with
I<PDF-generating> modules.  It does that by defining a font
class (C<FontFactory::DocFont> that includes a specific font face and size along
with functions emulating many of those found in C<Font::AFM>.

If the user has some PostScript Type 1 fonts he or she wants to use, they
may be converted to TrueType using the author's B<FontConverter> module.

The functions permit the user to completely describe his or her desired page
layout before placing it on a PDF page of the intended size. Of course the
metrics and layout could be used with any other typesetting program with
suitable filters. File an issue if you are interested in such.

=head2 Typical work flow with its current capability

=item Show fonts avaliable on your host by key, basename, directory, and kerning capability
=item Search for a specific font by name pattern or attribute (e.g., serif, monospaced, bold, italic, kerning)
=item Generate PDF documents with samples of selected fonts and sizes
=item Get metrics for a string suitable for typesetting in the desired font and size
=item Get full use of thousands of Unicode glyphs in PDF documents

For more details, see the public methods described in L<METHODS|/METHODS.md>.

For information on producing font samples, see L<FONT-SAMPLES|/FONT-SAMPLES.md>.

=head1 See also

=item This author's Raku module C<FontConverter>.

=item This author's Raku module C<FontFactory::Type1>.

=item David Warring's large collection of Raku PDF modules at L<https://github.com/pdf-raku>.

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

© 2023 Tom Browder

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod
