Create a doc table showing Font::FreeType used attributes versus FT_* C library 
names (see FreeType documentation).

Find a .ttf or .otf font that purports to be similar to the Adobe Type 1
fonts (urw-base-35 OR freefont) and test its metrics against Font::AFM and its 
Type 1 font.

Modify find*tbrowde* prog to ignore known free system fonts
(ensure most all Debian fonts are installed).

Create a method for users to define things like:

  what ligatures to use (by language?)
  
  fonts (simplify the current direction of FF)

Create method/subs to get Unicode details:

  by hex or decimal or octal codepoint

  by Unicode name

  by Unicode character

Design, improve, and document better the FF object

The goal is to produce a final product providing the aome of the same
methods as FontFactory::Type1 plus any additional methods that may be
available from David Warren's Font::FreeType module.

For the 'set-font-size' routine we only need to set the width in
points for outline use. We can also set width different than size for
special effects:

See lib/Font/FreeType/Face.rakumod:
    method set-font-size(Numeric $width, Numeric $height = $width,
                        Uint $horiz-res = 0, UInt $vert-res = 0) {

Create a method to use ligatures if available (file issue with
Font::FreeType). See a list of ligatures for Latin languages at:
<https://en.wikipedia.org/wiki/Ligature_(writing)>. Note the definition
of a Latin-script letter has a script property of "Latin' anf the
general category of 'Letter'.

Create useful subs to ease typesetting (to be moved to PDF::Document
or other suitable public distro)

Document the practical uses:

+ given a font, size, and a string, print a line of text for ordinary use
  DONE

+ given a font and size, print the first N printable glyphs

+ given a font, size, and a list of unicode points (in hex or decimal),
    print the results
